{"ast":null,"code":"var _jsxFileName = \"E:\\\\redux_api\\\\src\\\\index.js\";\nimport React from 'react';\nimport { render } from 'react-dom';\nimport Counter from './Counter';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  count: 0\n};\n\nfunction reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'INCREMENT':\n      return {\n        count: state.count + 1\n      };\n\n    case 'DECREMENT':\n      return {\n        count: state.count - 1\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst store = createStore(reducer); // store.dispatch({type : \"INCREMENT\"});\n// store.dispatch({type : \"DECREMENT\"});\n\nconst App = () => /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(Counter, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 32,\n  columnNumber: 3\n}, this);\n\n_c = App;\nrender( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 38,\n  columnNumber: 8\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/redux_api/src/index.js"],"names":["React","render","Counter","Provider","createStore","initialState","count","reducer","state","action","type","store","App","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,QAA4B,OAA5B;;AAGA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB;;AAIA,SAASC,OAAT,GAA+C;AAAA,MAA9BC,KAA8B,uEAAtBH,YAAsB;AAAA,MAARI,MAAQ;;AAC7C,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,WAAL;AACE,aAAO;AACLJ,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AADhB,OAAP;;AAGF,SAAK,WAAL;AACE,aAAO;AACLA,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AADhB,OAAP;;AAGF;AACE,aAAOE,KAAP;AAVJ;AAYD;;AAED,MAAMG,KAAK,GAAGP,WAAW,CAACG,OAAD,CAAzB,C,CACA;AACA;;AAEA,MAAMK,GAAG,GAAG,mBACV,QAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA,yBACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMC,G;AAONX,MAAM,eAAC,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAD,EAAUY,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAV,CAAN","sourcesContent":["import React from 'react';\nimport { render } from 'react-dom';\nimport Counter from './Counter';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\n\nconst initialState = {\n  count: 0\n};\n\nfunction reducer(state = initialState, action) {\n  switch(action.type) {\n    case 'INCREMENT':\n      return {\n        count: state.count + 1\n      };\n    case 'DECREMENT':\n      return {\n        count: state.count - 1\n      };\n    default:\n      return state;\n  }\n}\n\nconst store = createStore(reducer);\n// store.dispatch({type : \"INCREMENT\"});\n// store.dispatch({type : \"DECREMENT\"});\n\nconst App = () => (\n  <Provider store={store}>\n    <Counter/>\n  </Provider>\n);\n\n\nrender(<App />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}